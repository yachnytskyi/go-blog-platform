name: Auto Merge PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - '**'  # Matches all branches.

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.event.pull_request.mergeable == true  # Only proceed if the PR is mergeable

    steps:
      # Step 1: Checkout the PR's code.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Wait for status checks to complete.
      - name: Wait for status checks
        uses: peter-evans/wait-for-status@v2
        with:
          status-context: 'ci/circleci'  # Replace with your actual status check context if needed.
          check-interval: '5'  # Check every 5 seconds.
          max-wait: '1800'  # Wait for a maximum of 30 minutes.

      # Step 3: Merge the pull request automatically if checks are passed.
      - name: Merge PR
        uses: github-actions/github-script@v6
        with:
          script: |
            const pr = github.context.payload.pull_request;
            const owner = github.context.repo.owner;
            const repo = github.context.repo.repo;
            
            // Check if the PR is mergeable
            if (pr.mergeable_state === 'clean') {
              await github.rest.pulls.merge({
                owner: owner,
                repo: repo,
                pull_number: pr.number,
              });
              console.log(`Pull request #${pr.number} merged successfully.`);
            } else {
              console.log(`Pull request #${pr.number} is not mergeable.`);
            }
