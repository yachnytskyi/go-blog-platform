name: Auto Merge workflow

on:
  pull_request:
    branches: ['**']  
  merge_group:
    branches: ['**']  

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  

      - name: Wait for all checks to finish successfully
        run: |
          # Get the total number of checks (including the current workflow check)
          TOTAL_CHECKS=$(gh pr view ${{ github.event.pull_request.number }} --json statusCheckRollup -q '.statusCheckRollup | length')
          
          # Exclude this workflow's check by subtracting 1
          EXPECTED_FINISHED_CHECKS=$((TOTAL_CHECKS - 1))

          # Wait until the number of successful checks matches the expected number (total - 1)
          while true; do
            # Get the number of successful checks only
            SUCCESSFUL_CHECKS=$(gh pr view ${{ github.event.pull_request.number }} --json statusCheckRollup -q '.statusCheckRollup | map(select(.conclusion == "SUCCESS")) | length')
  
            # If the successful checks are equal to the expected count, break out of the loop
            if [ "$SUCCESSFUL_CHECKS" -ge "$EXPECTED_FINISHED_CHECKS" ]; then
              echo "All required checks passed successfully. Proceeding with the merge."
              break
            else
              echo "Waiting for checks to pass successfully..."
              sleep 10
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        if: success()
        run: gh pr merge ${{ github.event.pull_request.number }} --merge --auto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
