name: Develop Workflow with Version Tagging and Git Tag Sync

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate Version Tag
      id: version
      run: |
        # Fetch all tags
        git fetch --tags

        # Get the latest tag or default to 1.0.0
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")

        # Parse the version (major.minor.patch)
        IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
        PATCH=$((PATCH+1)) # Increment the patch version

        # Generate the new tag
        NEW_TAG="$MAJOR.$MINOR.$PATCH"

        # Output the new tag for use in later steps
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        echo "Generated Tag: $NEW_TAG"

    - name: Push New Git Tag
      if: ${{ success() }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        # Create and push the new tag
        git tag ${{ env.NEW_TAG }}
        git push origin ${{ env.NEW_TAG }}

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Decode and Create YAML File
      run: |
        echo "${{ secrets.DOCKER_DEVELOP_APPLICATION_CONFIG_YAML }}" | base64 -d > config/yaml/v1/docker.develop.application.yaml

    - name: Create .env file for MongoDB
      run: |
        echo "MONGO_INITDB_DATABASE=${{ secrets.MONGO_INITDB_DATABASE }}" > infrastructure/script/data/repository/mongo/.env
        echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> infrastructure/script/data/repository/mongo/.env
        echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> infrastructure/script/data/repository/mongo/.env
        echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> infrastructure/script/data/repository/mongo/.env
        echo "ADMIN_HASHED_PASSWORD=${{ secrets.ADMIN_HASHED_PASSWORD }}" >> infrastructure/script/data/repository/mongo/.env

    - name: Build Docker Image
      run: |
        docker build -t secrets.DOCKER_USERNAME/app-develop:${{ env.NEW_TAG }} .
        docker tag secrets.DOCKER_USERNAME/app-develop:${{ env.NEW_TAG }} secrets.DOCKER_USERNAME/app-develop:latest

    - name: Push Docker Image
      run: |
        docker push secrets.DOCKER_USERNAME/app-develop:${{ env.NEW_TAG }}
        docker push secrets.DOCKER_USERNAME/app-develop:latest

    - name: Build and Run Develop
      run: |
        docker compose up mongodb -d
        sleep 32  # Wait for 32 seconds to allow container to start up
        docker compose up app-develop -d
       
        sleep 4  # Wait for 4 seconds to allow container to start up
        docker logs go-blog-platform-app-develop-1

    - name: List All Running Containers
      run: docker ps

    - name: Stop Develop
      run: docker stop $(docker ps -a -q)