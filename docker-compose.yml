services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongodbDATA:/data/db
      - ./infrastructure/script/data/repository/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ./infrastructure/script/data/repository/mongo/init-test-data-mongo.js:/docker-entrypoint-initdb.d/init-test-data-mongo.js
    networks:
      - application-network

  app:
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile.dev
    image: app
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: reflex -r '\.go$' -s -- go run ./cmd/server/main.go

  app-staging:
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile.staging
    image: app-staging
    ports:
      - "8080:8080"
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: ./main 

  app-production:
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile.prod
    image: app-production
    ports:
      - "8080:8080"
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: ./main 

networks:
  application-network:
    driver: bridge

volumes:
  mongodbDATA:
