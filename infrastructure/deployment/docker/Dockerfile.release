# Stage 1: Build the Go application.
FROM golang:alpine AS builder

# Set the Current Working Directory inside the container.
WORKDIR /app

# Copy go.mod and go.sum files.
COPY go.mod go.sum ./

# Download all dependencies.
RUN go mod download

# Copy the source code into the container.
COPY . .

# Build the Go application statically.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main ./cmd/server/main.go

# Stage 2: Run the Go application using scratch.
FROM scratch

# Set the Current Working Directory inside the container.
WORKDIR /app

# Copy the compiled binary from the builder stage.
COPY --from=builder /app/main .

# Copy and rename the specific environment file.
COPY --from=builder /app/config/environment/.env.docker.release /app/config/environment/.env

# Copy and rename the specific YAML file.
COPY --from=builder /app/config/yaml/v1/docker.release.application.yaml /app/config/yaml/v1/application.yaml

# Expose port 8080 to the outside world.
EXPOSE 8080

# Command to run the executable.
CMD ["./main"]
