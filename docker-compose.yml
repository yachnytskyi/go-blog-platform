services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongodbDATA:/data/db
      - ./infrastructure/script/data/repository/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ./infrastructure/script/data/repository/mongo/init-test-data-mongo.js:/docker-entrypoint-initdb.d/init-test-data-mongo.js
      - ./infrastructure/script/data/repository/mongo/.env:/docker-entrypoint-initdb.d/.env  
    env_file:
      - ./infrastructure/script/data/repository/mongo/.env 
    networks:
      - application-network

  app-local:
    build:
      context: ./
      dockerfile: infrastructure/deployment/docker/Dockerfile.local
    image: app-local
    ports:
      - "8080:8080"
    volumes:
      - ./config/environment/.env.docker.develop:/app/config/environment/.env
      - ./config/yaml/v1/docker.develop.application.yaml:/app/config/yaml/v1/application.yaml
      - ./:/app
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: reflex -r '\.go$' -s -- go run ./cmd/server/main.go

  app-develop:
    build:
      context: ./
      dockerfile: infrastructure/deployment/docker/Dockerfile.develop
    image: app-develop
    ports:
      - "8080:8080"
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: ./main 

  app-release:
    build:
      context: ./
      dockerfile: infrastructure/deployment/docker/Dockerfile.release
    image: app-release
    ports:
      - "8080:8080"
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: ./main 

  app-production:
    build:
      context: ./
      dockerfile: infrastructure/deployment/docker/Dockerfile.production
    image: app-production
    ports:
      - "8080:8080"
    working_dir: /app
    depends_on:
      - mongodb
    networks:
      - application-network
    command: ./main 

networks:
  application-network:
    driver: bridge

volumes:
  mongodbDATA:
